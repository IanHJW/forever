<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lph.forever.mapper.UserMapper">
	<resultMap id="BaseResultMap" type="com.lph.forever.po.User">
		<id column="userId" property="userid" jdbcType="INTEGER" />
		<result column="userName" property="username" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="Email" property="email" jdbcType="VARCHAR" />
		<result column="userImgPath" property="userimgpath" jdbcType="VARCHAR" />
		<result column="location" property="location" jdbcType="VARCHAR" />
		<result column="groupName" property="groupname" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		userId, userName, password, Email, userImgPath, location,
		groupName
	</sql>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from user
		where userId = #{userId}
	</select>

	<select id="selectByUsername" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select * from `user` where binary `user`.userName =
		#{username,jdbcType=VARCHAR}
	</select>

	<!-- 通过用户名称和密码返回用户实例 -->
	<select id="selectByUserNameAndPassword" resultMap="BaseResultMap"
		parameterType="com.lph.forever.po.User">
		select * from user where
		`user`.userName=#{username,jdbcType=VARCHAR} and
		`user`.`password`=#{password,jdbcType=VARCHAR}
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from user
		where userId =
		#{userid,jdbcType=INTEGER}
	</delete>

	<insert id="insert" parameterType="com.lph.forever.po.User">
		insert into user (userId,
		userName, password,
		Email,
		userImgPath, location,
		groupName)
		values
		(#{userid,jdbcType=INTEGER},
		#{username,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR},
		#{userimgpath,jdbcType=VARCHAR},
		#{location,jdbcType=VARCHAR},
		#{groupname,jdbcType=VARCHAR})
	</insert>

	<insert id="insertSelective" parameterType="com.lph.forever.po.User">
		insert into user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				userId,
			</if>
			<if test="username != null">
				userName,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="email != null">
				Email,
			</if>
			<if test="userimgpath != null">
				userImgPath,
			</if>
			<if test="location != null">
				location,
			</if>
			<if test="groupname != null">
				groupName,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				#{userid,jdbcType=INTEGER},
			</if>
			<if test="username != null">
				#{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="userimgpath != null">
				#{userimgpath,jdbcType=VARCHAR},
			</if>
			<if test="location != null">
				#{location,jdbcType=VARCHAR},
			</if>
			<if test="groupname != null">
				#{groupname,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>

	<update id="updateByPrimaryKeySelective" parameterType="com.lph.forever.po.User">
		update user
		<set>
			<if test="username != null and username != '' ">
				userName = #{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null and password != ''">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				Email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="userimgpath != null">
				userImgPath = #{userimgpath,jdbcType=VARCHAR},
			</if>
			<if test="location != null">
				location = #{location,jdbcType=VARCHAR},
			</if>
			<if test="groupname != null">
				groupName = #{groupname,jdbcType=VARCHAR},
			</if>
		</set>
		where userId = #{userid,jdbcType=INTEGER}
	</update>

	<update id="updateByPrimaryKey" parameterType="com.lph.forever.po.User">
		update user
		set
		userName = #{username,jdbcType=VARCHAR},
		password =
		#{password,jdbcType=VARCHAR},
		Email =
		#{email,jdbcType=VARCHAR},
		userImgPath =
		#{userimgpath,jdbcType=VARCHAR},
		location =
		#{location,jdbcType=VARCHAR},
		groupName = #{groupname,jdbcType=VARCHAR}
		where userId = #{userid,jdbcType=INTEGER}
	</update>

</mapper>